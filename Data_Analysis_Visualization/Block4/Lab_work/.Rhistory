skin_df <- read.table(file.choose(),sep=' ', header=TRUE)
skin.df <- read.table(file.choose(),sep=' ', header=TRUE)
# Create a reversed data frame
# Transpose just the gene expression
re.skin.df <- data.frame(t(skin.df[,-2562]))
# Add sample type as column name
colnames(re.skin.df)<-paste0(skin.df$tissue,1:72)
summary(re.skin.df)
range(re.skin.df$tumor1)
range(re.skin.df$tumor1)
range(re.skin.df$tumor2)
range(re.skin.df$tumor3)
range(re.skin.df$normal70)
range(re.skin.df$normal71)
range(re.skin.df$normal72)
range(re.skin.df[1:43])
range(re.skin.df[44:72])
# over all tumor smples
range(re.skin.df[1:43])
# over all normal smples
range(re.skin.df[44:72])
# load ggplt2
library(ggplot2)
pl.tumor1 <- (data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
# histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
# histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=1.23,color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor2
pl.tumor2 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor2 <- pl.tumor2 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor2)
# Create histogram for tumor2
pl.tumor2 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor2))
pl.tumor2 <- pl.tumor2 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor2)
# Create histogram for tumor3
pl.tumor3 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor3))
pl.tumor3 <- pl.tumor3 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor3)
# Create histogram for normall70
pl.normall70 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal70))
pl.normall70 <- pl.tumor1 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall70")
print(pl.normall70)
# Create histogram for normall70
pl.normall70 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal70))
pl.normall70 <- pl.normall70 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall70")
print(pl.normall70)
# Create histogram for normall71
pl.normall71 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal71))
pl.normall71 <- pl.normall71 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall71")
print(pl.normall71)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
tumor.samples <- unlist(re.skin.df[1:43])
print(tumor.samples)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=unlist(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=cloMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=colMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMean(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="red",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
pl <- pl.tumor + pl.normal
print(pl)
pl <- pl.tumor + pl.normal
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.7,size=3)
print(pl.scatter)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.7,size=3)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.5,size=4)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
tumor.avg <- rowMeans(re.skin.df[1:43])
normal.avg <- rowMeans(re.skin.df[44:72])
class(tumor.avg)
differ <- tumor.avg - normal.avg
print(differ)
pl.differ <- ggplot(data=differ,aes(x=differ))
print(pl.differ)
tumor.avg <- c(rowMeans(re.skin.df[1:43]))
normal.avg <- c(rowMeans(re.skin.df[44:72]))
differ <- tumor.avg - normal.avg
pl.differ <- ggplot(data=differ,aes(x=differ))
print(pl.differ)
differ <- tumor.avg - normal.avg
class(differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
differ <- rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])
differ <- rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])
overexpressed.gene <- 0
underexpressed.gene <- 0
for (dif in differ){
if (dif>0){overexpressed.gene <- overexpressed.gene+1}
if (dif<0){underexpressed.gene <- underexpressed.gene+1}
}
print(overexpressed.gene)
print(underexpressed.gene)
print("number of overexpressed.gene =" + overexpressed.gene)
print("number of overexpressed.gene =" + str(overexpressed.gene))
print("number of overexpressed.gene =", overexpressed.gene)
print("number of overexpressed.gene =", str(overexpressed.gene))
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot()
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression") + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box <- pl.box + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
# Creat a boxplot for gene AMY2B
pl.box1 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box1 <- pl.box1 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box1 <- pl.box1 + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box1)
# Creat a boxplot for gene CLC
pl.box2 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$CLC))
pl.box2 <- pl.box2 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box2 <- pl.box2 + ggtitle("Gene CLC expression in tumor and normal tissue")
print(pl.box2)
# Creat a boxplot for gene NAT1
pl.box3 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$NAT1))
pl.box3 <- pl.box3 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box3 <- pl.box3 + ggtitle("Gene NAT1 expression in tumor and normal tissue")
print(pl.box3)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.5,size=4)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
getwd()
state.x77
USPersonalExpenditure
women
data()
library(ISLR)
# extract labels (cancer type)
nci.labs=NCI60$labs
# extract xperimental measurements (microarray data)
nci.data=NCI60$data
# number of rows and columns of nci.data
dim(nci.data)
# examine the cancer types for the cell lines
table(nci.labs)
nci.labs[which(table(nci.labs)==max(table(nci.labs)))]
# Lab work Block 4 Regression
install.packages("XLConnect")
# Lab work Block 4 Regression
install.packages("XLConnect")
theData <- read.csv("lser.csv")
setwd("~/projects/github/wur_bioinfomatics/Data_Analysis_Visualization/Block4/Lab_work")
theData <- read.csv("lser.csv")
View(theData)
# B
pairs(theData)
# C
model <- lm(tox ~ colour + base + acid, data=theData)
summary(model)
# D
predict(model, data.frame(colour=0.52, base=0.60, acid=0.95))
# E
ypred <- predict(model)
plot(theData$tox,ypred)
abline(a=0,b=1)
# Exercise 2
# A
data <- as.matrix(read.csv("winedata.csv", header=TRUE, row.names=1))
# B
dim(data)
colnames(data)
rownames(data)
colnames(data[,1:17])
# C
install.packages("glmnet")
library(glmnet)
x=data[,-c(1:17)]
y=data[,1]
# D
grid <- 10^seq(10,-10,length=200)
?cv.glmnet
# F
mdl <- cv.glmnet(x=x, y=y, alpha=0, lambda=grid)
plot(mdl)
mdl
# G
ypred <- predict(mdl, newx=x)
plot(y,ypred)
abline(a=0,b=1)
# H
sum((ypred-mean(y))^2)/sum((y-mean(y))^2)
x1=data[,-c(1:10)]
y=data[,1]
mdl1 <- cv.glmnet(x=x1, y=y, alpha=0, lambda=grid)
plot(mdl1)
ypred1 <- predict(mdl1, newx=x)
ypred1 <- predict(mdl1, newx=x1)
plot(y,ypred1)
abline(a=0,b=1)
sum((ypred1-mean(y))^2)/sum((y-mean(y))^2)
## 10-17
x2=data[,-c(10:17)]
mdl2 <- cv.glmnet(x=x2, y=y, alpha=0, lambda=grid)
plot(mdl2)
ypred2 <- predict(mdl2, newx=x1)
ypred2 <- predict(mdl2, newx=x2)
plot(y,ypred2)
abline(a=0,b=1)
sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
# J
x=data[,-c(1:17)]
y=data[,1]
# I
## 1-10
x1=data[,-c(1:10)]
mdl0 <- cv.glmnet(x=x1, y=y, alpha=0, lambda=grid)
plot(mdl0)
ypred1 <- predict(mdl0, newx=x1)
plot(y,ypred1)
abline(a=0,b=1)
## 10-17
x2=data[,-c(10:17)]
mdl1 <- cv.glmnet(x=x2, y=y, alpha=0, lambda=grid)
plot(mdl1)
ypred2 <- predict(mdl1, newx=x2)
plot(y,ypred2)
abline(a=0,b=1)
sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
sum((ypred1-mean(y))^2)/sum((y-mean(y))^2)
ypred2 <- predict(mdl1, newx=x2)
## 10-17
x2=data[,-c(10:17)]
mdl1 <- cv.glmnet(x=x2, y=y, alpha=0, lambda=grid)
plot(mdl1)
ypred2 <- predict(mdl1, newx=x2)
plot(y,ypred2)
abline(a=0,b=1)
sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
# J
x=data[,-c(1:17)]
y=data[,1]
mdl2 <- cv.glmnet(x=x,y=y,alpha=1,lambda=grid)
plot(mdl2)
# I
## 1-10
x0=data[,-c(1:10)]
mdl0 <- cv.glmnet(x=x0, y=y, alpha=0, lambda=grid)
plot(mdl0)
ypred0 <- predict(mdl0, newx=x0)
plot(y,ypred0)
abline(a=0,b=1)
sum((ypred0-mean(y))^2)/sum((y-mean(y))^2)
## 10-17
x1=data[,-c(10:17)]
mdl1 <- cv.glmnet(x=x1, y=y, alpha=0, lambda=grid)
plot(mdl1)
ypred1 <- predict(mdl1, newx=x2)
plot(y,ypred1)
abline(a=0,b=1)
sum((ypred1-mean(y))^2)/sum((y-mean(y))^2)
# J
x=data[,-c(1:17)]
y=data[,1]
mdl2 <- cv.glmnet(x=x,y=y,alpha=1,lambda=grid)
plot(mdl2)
ypred2 <- predict(mdl2, newx=x)
R2 <- sum((ypred2-mean(y))^2)/sum((y-mena(y))^2)
R2 <- sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred2, main=sprintf('%s lasso R^2=%.2f', colnames(data)[1],R2))
abline(a=0,b=1)
# K
coef(mdl2)
colnames(x)[which(coef(mdl2) != 0)]
# I
## 5
x=data[,-c(1:17)]
y=data[,5]
mdl <- cv.glmnet(x=x, y=y, alpha=0, lambda=grid)
plot(mdl0)
ypred <- predict(mdl, newx=x)
plot(y,ypred)
abline(a=0,b=1)
sum((ypred-mean(y))^2)/sum((y-mean(y))^2)
## 10
x=data[,-c(1:17)]
y=data[,10]
mdl <- cv.glmnet(x=x, y=y, alpha=0, lambda=grid)
plot(mdl0)
ypred <- predict(mdl, newx=x)
plot(y,ypred)
abline(a=0,b=1)
sum((ypred-mean(y))^2)/sum((y-mean(y))^2)
## 15
x=data[,-c(1:17)]
y=data[,15]
mdl <- cv.glmnet(x=x, y=y, alpha=0, lambda=grid)
plot(mdl0)
## 15
x=data[,-c(1:17)]
y=data[,15]
mdl <- cv.glmnet(x=x, y=y, alpha=0, lambda=grid)
plot(mdl0)
ypred <- predict(mdl, newx=x)
plot(mdl)
ypred <- predict(mdl, newx=x)
plot(y,ypred)
abline(a=0,b=1)
sum((ypred-mean(y))^2)/sum((y-mean(y))^2)
# L
## 5
x=data[,-c(1:17)]
y=data[,5]
mdl2 <- cv.glmnet(x=x,y=y,alpha=1,lambda=grid)
plot(mdl2)
ypred2 <- predict(mdl2, newx=x)
R2 <- sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred2, main=sprintf('%s lasso R^2=%.2f', colnames(data)[1],R2))
abline(a=0,b=1)
colnames(x)[which(coef(mdl2) != 0)]
## 10
x=data[,-c(1:17)]
y=data[,10]
mdl2 <- cv.glmnet(x=x,y=y,alpha=1,lambda=grid)
plot(mdl2)
ypred2 <- predict(mdl2, newx=x)
R2 <- sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred2, main=sprintf('%s lasso R^2=%.2f', colnames(data)[1],R2))
abline(a=0,b=1)
colnames(x)[which(coef(mdl2) != 0)]
## 15
x=data[,-c(1:17)]
y=data[,15]
mdl2 <- cv.glmnet(x=x,y=y,alpha=1,lambda=grid)
plot(mdl2)
ypred2 <- predict(mdl2, newx=x)
R2 <- sum((ypred2-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred2, main=sprintf('%s lasso R^2=%.2f', colnames(data)[1],R2))
abline(a=0,b=1)
colnames(x)[which(coef(mdl2) != 0)]
# M
x=data[,-c(1:17)]
y=data[,1]
ypred <- rep(NA, nrow(data))
for (i in 1:nrow(data)) {
mdl <- cv.glmnet(x=x[-i,],y=y[-i], alpha=1, lambda=grid)
ypred[i] <- predict(mdl, newx=t(x[i,]))
}
Q2 <- sum((ypred-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred, main=sprintf('%s lasso Q^2=%.2f', colnames(data)[1],Q2))
abline(a=0,b=1)
# N
split(sample(1:nrow(data)), 1:10)
x=data[,-c(1:17)]
y=data[,1]
ypred10 <- rep(NA, 10)
data10 <- split(sample(1:nrow(data)), 1:10)
class(data10)
print(data10)
data$'7'
data10$`10`
# N
fold <- split(sample(1:nrow(data)), 1:10)
print(fold)
print(fold$`1`)
nrow(data)
v <- 1:40
v <- c(1:40)
class(v)
v - fold$`10`
for (i in fold) {
mdl10 <- cv.glmnet(x=x[-i,], y=y[-i],slpha=1, lambda=grid)
ypred10[i] <- predict(mdl10,newx=t(x[i,]))
}
for (i in fold) {
mdl10 <- cv.glmnet(x=x[-i,], y=y[-i], alpha=1, lambda=grid)
ypred10[i] <- predict(mdl10,newx=t(x[i,]))
}
View(ypred0)
ypred10 <- rep(NA, nrow(data))
for (i in fold) {
mdl10 <- cv.glmnet(x=x[-i,], y=y[-i], alpha=1, lambda=grid)
ypred10[i] <- predict(mdl10,newx=t(x[i,]))
}
for (i in fold) {
print(i)}
for (i in fold) {
mdl10 <- cv.glmnet(x=x[-i,], y=y[-i], alpha=1, lambda=grid)
for (pos in i) {
ypred10[pos] <- predict(mdl10,newx=t(x[pos,]))
}
}
Q_square <- sum((ypred10-mean(y))^2)/sum((y-mean(y))^2)
plot(y, ypred10, main=sprintf('%s lasso Q^2=%.2f', colnames(data)[1],Q_square))
abline(a=0,b=1)
