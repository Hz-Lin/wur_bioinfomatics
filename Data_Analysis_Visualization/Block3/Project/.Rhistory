underexpressed.gene <- 0
for (dif in differ){
if (dif>0){overexpressed.gene <- overexpressed.gene+1}
if (dif<0){underexpressed.gene <- underexpressed.gene+1}
}
print(overexpressed.gene)
print(underexpressed.gene)
print("number of overexpressed.gene =" + overexpressed.gene)
print("number of overexpressed.gene =" + str(overexpressed.gene))
print("number of overexpressed.gene =", overexpressed.gene)
print("number of overexpressed.gene =", str(overexpressed.gene))
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot()
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression") + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box <- pl.box + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
# Creat a boxplot for gene AMY2B
pl.box1 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box1 <- pl.box1 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box1 <- pl.box1 + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box1)
# Creat a boxplot for gene CLC
pl.box2 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$CLC))
pl.box2 <- pl.box2 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box2 <- pl.box2 + ggtitle("Gene CLC expression in tumor and normal tissue")
print(pl.box2)
# Creat a boxplot for gene NAT1
pl.box3 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$NAT1))
pl.box3 <- pl.box3 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box3 <- pl.box3 + ggtitle("Gene NAT1 expression in tumor and normal tissue")
print(pl.box3)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.5,size=4)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
getwd()
state.x77
USPersonalExpenditure
women
data()
library(ISLR)
# extract labels (cancer type)
nci.labs=NCI60$labs
# extract xperimental measurements (microarray data)
nci.data=NCI60$data
# number of rows and columns of nci.data
dim(nci.data)
# examine the cancer types for the cell lines
table(nci.labs)
nci.labs[which(table(nci.labs)==max(table(nci.labs)))]
setwd("~/projects/github/wur_bioinfomatics/Data_Analysis_Visualization/Block3/Project")
# read data
skin.df <- read.table('get_normal_vs_tumor2_RAW_Skin.out',sep=' ',header=TRUE,stringsAsFactors=FALSE)
skin.tdf <- data.frame(t(skin.df[,-2562]))
colnames(skin.tdf)<-paste0(skin.df$tissue,1:72)
header(skin.df)
head(skin.df)
# Clustering the genes
# K-means clustering
dim(skin.df)
# Clustering the genes
# K-means clustering
dim(skin.tdf)
x <- skin.tdf[,1:71]
km.gene <- kmeans(x,2,nstart=20)
km.gene$cluster
plot(x,col=(km.gene$cluster+1),main="K-means Clustering Genes",xlab="",ylab="",pch=20,cex=2)
plot(x,col=(km.gene$cluster+1),main="K-means Clustering Genes",pch=20,cex=2)
plot(x,col=(km.gene$cluster+1),main="K-means Clustering Genes")
# Clustering the genes
# K-means clustering
dim(skin.tdf)
km.gene <- kmeans(skin.tdf,2,nstart=20)
km.gene$cluster
plot(x,col=(km.gene$cluster+1),main="K-means Clustering Genes")
set.seed(6)
wcss <- vector
for (i in 1:10) {wcss[i] <- sum(kmeans(skin.tdf,i)$withinss)}
wcss <- vector
View(wcss)
for (i in 1:10) {wcss[i] <- sum(kmeans(skin.tdf,i)$withinss)}
set.seed(6)
wcss <- vector()
for (i in 1:10) wcss[i] <- sum(kmeans(skin.tdf,i)$withinss)
plot(1:10,wcss,type='b')
set.seed(6)
wcss <- vector()
for (i in 1:20) wcss[i] <- sum(kmeans(skin.tdf,i)$withinss)
plot(1:20,wcss,type='b')
km.gene8 <- kmeans(skin.tdf,8,nstart=20)
km.gene8$cluster
km.gene$tot.withinss
km.gene8$tot.withinss
# hierarchical clustering
dixt(skin.tdf)
# hierarchical clustering
dist(skin.tdf)
# use complete linkage
hc.gene.com <- hclust(dist(skin.tdf),method="complete")
# use average linkage
hc.gene.avg <- hclust(dist(skin.tdf),method="average")
#create denrogram
plot(hc.gene.com,main="complete linkage",xlab='',ylab='',cex=.9)
plot(hc.gene.avg,main="average linkage",xlab='',ylab='',cex=.9)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.tdf))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.tdf[2561,]))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.tdf))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.df))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.tdf))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
# use a correlation based distance for hc clustering
skin.tdf.cordist <- as.dist(1-cor(skin.df[,1:2561]))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com)
plot(hccor.gene.com,main="complete linkage",xlab='',ylab='',cex=.9)
hccor.gene.avg <- hclust(skin.tdf.cordist,method="average")
plot(hccor.gene.avg,main="average linkage",xlab='',ylab='',cex=.9)
hc.gene=cutree(hccor.gene.com,5)
hc.gene
table(hc.gene)
n=which(hc.gene==2)[1]
plot(skin.tdf[n,],type="l",col="red")
n=which(hc.gene==1)[1]
plot(skin.tdf[n,],type="l",col="red")
class(n)
for (i in 2:length(which(hc.gene==2))) {
n=which(hc.gene==2)[i]
points(skin.tdf[n,],type="l",col="red")
}
# V
n=which(hc.gene==1)[1]
plot(skin.tdf[n,],type="l",col="red")
for (i in 2:length(which(hc.gene==2))) {
n=which(hc.gene==2)[i]
points(skin.tdf[n,],type="l",col="red")
}
hc.gene
n <- which(hc.gene==1)[1]
plot(skin.tdf[n,],type="l",col="red")
n <- which(hc.gene==1)[1]
plot(skin.tdf[n,])
n <- which(hc.gene==1)[1]
plot(skin.df[n,],type="l",col="red")
clu1 <- which(hc.gene==1)
hc1 <- data.matrix(skin.tdf[unlist(clu1)])
hc1 <- data.matrix(skin.tdf[unlist(hc.gene[he.gene==1])])
hc1 <- data.matrix(skin.tdf[unlist(hc.gene[hc.gene==1])])
heatmap(hc1,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=(5,10))
heatmap(hc1,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256))
n <- which(hc.gene==1)[1]
print(n)
print(skin.tdf[n,])
plot(skin.tdf[n,],type="l",col="red")
plot(skin.tdf[n,])
plot(skin.tdf[n,], type="l", col="red")
plot(skin.tdf[n,], type="l")
hc1 <- data.matrix(skin.tdf[unlist(hc.gene$lower[[1]]),])
for (i in 2:length(which(hc.gene==2))) {
n=which(hc.gene==2)[i]
points(skin.tdf[n,], type = 'l')
}
n <- which(hc.gene==1)[1]
plot(skin.tdf[n,],type="l",col="red")
?plot
n <- which(hc.gene==1)[1]
plot(skin.tdf[n,],type='l',col='red')
# Clustering the samples
# K-means clustering
# cluster into 2 groups
dim(skin.df)
km.sample <- kmeans(skin.df[,1:2561],2,nstart=20)
km.sample$cluster
table(km.sample$cluster)
km.sample <- kmeans(skin.df.nolab,2,nstart=20)
skin.df.nolab <-skin.df[,1:2561]
km.sample <- kmeans(skin.df.nolab,2,nstart=20)
km.sample$cluster
table(km.sample$cluster)
#elbow method to check the k value
set.seed(6)
wcss <- vector()
for (i in 1:10) wcss[i] <- sum(kmeans(skin.df.nolab,i)$withinss)
plot(1:20,wcss,type='b')
plot(1:10,wcss,type='b')
# we decided to go for 6 clusters
km.sample6 <- kmeans(skin.df,6,nstart=20)
# we decided to go for 6 clusters
km.sample6 <- kmeans(skin.df.nolab,6,nstart=20)
km.sample6$cluster
km.sample6$tot.withinss
table(km.sample,km.sample6)
km.sample$tot.withinss
km.sample6$tot.withinss
table(km.sample$cluster,km.sample6$cluster)
table(km.sample$cluster,skin.df$tissue)
table(km.sample6$cluster,skin.df$tissue)
km.sample3 <- kmeans(skin.df.nolab,3,nstart=20)
km.sample3$cluster
table(km.sample3$cluster)
table(km.sample3$cluster,skin.df$tissue)
n <- which(hc.gene==1)[1]
prit(n)
print(n)
print(skin.tdf[n,])
plot(skin.tdf[n,],type='l',col='red')
plot(t(skin.tdf[n,]),type='l',col='red')
plot(skin.df[,n],type='l',col='red')
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red')
plot(skin.df[,n],type='l',col='red')
for (i in 2:length(which(hc.gene==2))) {
n=which(hc.gene==2)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:length(which(hc.gene==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:5) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:5) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:3) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red')
for (i in 2:3) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:5) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red')
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red',ylim=c(0,50))
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
plot(skin.df[,n],type='l',col='red',ylim=c(0,100))
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red',ylim=c(0,100))
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
plot(skin.df[,n],type='l',col='red',ylim=c(0,500))
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red',ylim=c(0,500))
for (i in 2:length(which(hc.gene==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
hc1 <- data.matrix(skin.tdf[unlist(hc.gene$lower[[1]]),])
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red',ylim=c(0,1500))
for (i in 2:length(which(hc.gene==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
plot(skin.df[,n],type='l',col='red',ylim=c(0,2500))
for (i in 2:length(which(hc.gene==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
n <- which(hc.gene==1)[1]
plot(skin.df[,n],type='l',col='red',ylim=c(0,100))
for (i in 2:length(which(hc.gene==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
plot(skin.df[,n],type='l',col='red',ylim=c(0,100))
for (i in 2:10) {
n=which(hc.gene==1)[i]
points(skin.df[,n],type="l",col="red")
}
ne <- which(km.gene8$cluster==1)[1]
plot(skin.df[,ne],type='l',col='red',ylim=c(0,100))
ne <- which(km.gene8$cluster==1)[1]
plot(skin.df[,ne],type='l',col='red',ylim=c(0,1000))
for (i in 2:length(which(km.gene8$cluster==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,ne],type="l",col="red")
}
ne <- which(km.gene8$cluster==1)[1]
plot(skin.df[,ne],type='l',col='red',ylim=c(0,2000))
for (i in 2:length(which(km.gene8$cluster==1))) {
n=which(hc.gene==1)[i]
points(skin.df[,ne],type="l",col="red")
}
print(ne)
print(skin.df[,ne])
table(km.gene8$cluster)
table(km.sample$cluster,skin.df$tissue)
table(km.sample6$cluster,skin.df$tissue)
table(km.sample3$cluster,skin.df$tissue)
table(km.sample$cluster,skin.df$tissue)
table(km.sample6$cluster,skin.df$tissue)
# hierarchical clustering
dist(skin.df.nolab)
# use complete linkage
hc.sample.com <- hclust(dist(skin.df.nolab),method="complete")
# use average linkage
hc.sample.avg <- hclust(dist(skin.df.nolab),method="average")
#create denrogram
plot(hc.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
plot(hc.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
skin.df.cordist <- as.dist(1-cor(skin.df.nolab[,1:2561]))
hccor.sample.com <- hclust(skin.df.cordist,method="complete")
plot(hccor.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
skin.df.cordist <- as.dist(1-cor(t(skin.df.nolab)))
hccor.sample.com <- hclust(skin.df.cordist,method="complete")
plot(hccor.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
hccor.sample.avg <- hclust(skin.df.cordist,method="average")
plot(hccor.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
plot(hc.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
plot(hc.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
plot(hccor.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
plot(hccor.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
hc.sample=cutree(hccor.sample.avg,4)
hc.sample
table(hc.sample)
table(hc.sample,skin.df$tissue)
hc.sample.com=cutree(hccor.sample.avg,4)
hc.sample.com
table(hc.sample.com)
table(hc.sample.com,skin.df$tissue)
hc.sample.avg=cutree(hccor.sample.avg,3)
hc.sample.avg
table(hc.sample.avg)
table(hc.sample.avg,skin.df$tissue)
hc.sample.avg=cutree(hccor.sample.avg,4)
hc.sample.avg
table(hc.sample.avg)
table(hc.sample.avg,skin.df$tissue)
hc.sample.com=cutree(hccor.sample.com,3)
hc.sample.com
table(hc.sample.com)
table(hc.sample.com,skin.df$tissue)
hc.sample.com6=cutree(hccor.sample.com,6)
hc.sample.com6
table(hc.sample.com6)
table(hc.sample.com6,skin.df$tissue)
hc.sample.com5=cutree(hccor.sample.com,5)
hc.sample.com5
table(hc.sample.com5)
table(hc.sample.com5,skin.df$tissue)
plot(hc.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
dist(skin.df.nolab)
# use complete linkage
hce.sample.com <- hclust(dist(skin.df.nolab),method="complete")
# use average linkage
hce.sample.avg <- hclust(dist(skin.df.nolab),method="average")
plot(hce.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
plot(hce.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
hce.sample.avg=cutree(hce.sample.com,5)
table(hce.sample.avg,skin.df$tissue)
hce.sample.avg=cutree(hce.sample.avg,3)
table(hce.sample.avg,skin.df$tissue)
hccor.sample.com <- hclust(skin.df.cordist,method="complete")
plot(hccor.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
hce.sample.com=cutree(hce.sample.com,5)
table(hce.sample.com,skin.df$tissue)
hce.sample.avg=cutree(hce.sample.avg,3)
table(hce.sample.avg,skin.df$tissue)
skin.df.cordist <- as.dist(1-cor(t(skin.df.nolab)))
hccor.sample.com <- hclust(skin.df.cordist,method="complete")
plot(hccor.sample.com,main="complete linkage",xlab='',ylab='',cex=.9)
hccor.sample.avg <- hclust(skin.df.cordist,method="average")
plot(hccor.sample.avg,main="average linkage",xlab='',ylab='',cex=.9)
hce.sample.com=cutree(hce.sample.com,5)
table(hce.sample.com,skin.df$tissue)
# Euclidean distance, average linkage
hce.sample.avg=cutree(hce.sample.avg,3)
table(hce.sample.avg,skin.df$tissue)
# hierarchical clustering
dist(skin.df.nolab)
# use complete linkage
hce.sample.com <- hclust(dist(skin.df.nolab),method="complete")
# use average linkage
hce.sample.avg <- hclust(dist(skin.df.nolab),method="average")
euc.com=cutree(hce.sample.com,5)
print(euc.com)
euc.avg=cutree(hce.sample.avg,3)
print(euc.avg)
table(euc.com,skin.df$tissue)
table(euc.avg,skin.df$tissue)
cor.com=cutree(hccor.sample.com,5)
table(cor.com,skin.df$tissue)
cor.avg=cutree(hccor.sample.avg,4)
table(cor.avg,skin.df$tissue)
distskind.df = dist(skin.df[,1:2561])
hcl = hclust(distskind.df)
hcld = as.dendrogram(hcl)
cuthcd = cut(hcld, h=20)
plot(cuthcd$lower[[2]])
plot(hcl, cex=.3)
plot(cuthcd$lower[[2]])
plot(cuthcd$lower[[5]])
cuthcd = cut(hcld, h=3)
plot(hcl, cex=.3)
plot(cuthcd$lower[[5]])
plot(cuthcd$lower[[2]])
plot(hcl, cex=.3)
hcld = as.dendrogram(hcl)
cuthcd = cut(hcld, h=3)
plot(cuthcd$lower[[2]])
plot(cuthcd$lower[[3]])
cuthcd = cut(hcld, 3)
plot(hcl, cex=.3)
plot(cuthcd$lower[[3]])
?cut.dendrogram
cuthcd = cut(hcld, h=20000)
plot(hcl, cex=.3)
plot(cuthcd$lower[[3]])
hcld = as.dendrogram(hcl)
cuthcd = cut(hcld, h=20000)
cuthcd
plot(hcl, cex=.3)
cuthcd = cut(hcld, h=40000)
plot(hcl, cex=.3)
plot(cuthcd$lower[[3]])
hc1 <- data.matrix(skin.df[unlist(cuthcd$lower[[1]]),])
heatmap(hc1,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
plot(hccor.gene.com,main="complete linkage",xlab='',ylab='',cex=.9)
abline(h=1.6, col="red")
hcld.hccor <- as.dendrogram(hccor.gene.com)
cuthcd = cut(hcld.hccor, h=1.6)
plot(hcld.hccor, cex=.3)
abline(h=1.6, col="red")
cuthcd = cut(hcld.hccor, h=1.6)
plot(cuthcd$lower[[1]])
plot(cuthcd$lower[[2]])
plot(cuthcd$lower[[3]])
plot(cuthcd$lower[[4]])
plot(cuthcd$lower[[5]])
plot(cuthcd$lower[[6]])
plot(cuthcd$lower[[1]])
hc1 <- data.matrix(skin.df[unlist(cuthcd$lower[[1]]),])
heatmap(hc1,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
hc2 <- data.matrix(skin.df[unlist(cuthcd$lower[[2]]),])
heatmap(hc2,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
hc3 <- data.matrix(skin.df[unlist(cuthcd$lower[[3]]),])
heatmap(hc3,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
hccor.gene.com <- hclust(skin.tdf.cordist,method="complete")
plot(hccor.gene.com,main="complete linkage",xlab='',ylab='',cex=.9)
hcld.hccor <- as.dendrogram(hccor.gene.com)
plot(hcld.hccor, cex=.3)
abline(h=1.6, col="red")
cuthcd = cut(hcld.hccor, h=1.6)
plot(cuthcd$lower[[1]])
cuthcd = cut(hcld.hccor, h=1.6)
plot(hcld.hccor, cex=.3)
plot(cuthcd$lower[[1]])
hc1 <- data.matrix(skin.tdf[unlist(cuthcd$lower[[1]]),])
heatmap(hc1,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
hc2 <- data.matrix(skin.tdf[unlist(cuthcd$lower[[2]]),])
heatmap(hc2,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
hc3 <- data.matrix(skin.tdf[unlist(cuthcd$lower[[3]]),])
heatmap(hc3,Rowv=NA,Colv=NA,scale='none',col=heat.colors(256),margins=c(5,10))
