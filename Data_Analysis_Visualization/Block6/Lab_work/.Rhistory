skin_df <- read.table(file.choose(),sep=' ', header=TRUE)
skin.df <- read.table(file.choose(),sep=' ', header=TRUE)
# Create a reversed data frame
# Transpose just the gene expression
re.skin.df <- data.frame(t(skin.df[,-2562]))
# Add sample type as column name
colnames(re.skin.df)<-paste0(skin.df$tissue,1:72)
summary(re.skin.df)
range(re.skin.df$tumor1)
range(re.skin.df$tumor1)
range(re.skin.df$tumor2)
range(re.skin.df$tumor3)
range(re.skin.df$normal70)
range(re.skin.df$normal71)
range(re.skin.df$normal72)
range(re.skin.df[1:43])
range(re.skin.df[44:72])
# over all tumor smples
range(re.skin.df[1:43])
# over all normal smples
range(re.skin.df[44:72])
# load ggplt2
library(ggplot2)
pl.tumor1 <- (data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
# histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
# histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=1.23,color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="yellow",fill="yellow", alpha=0.5) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor1
pl.tumor1 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor1 <- pl.tumor1 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor1)
# Create histogram for tumor2
pl.tumor2 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor1))
pl.tumor2 <- pl.tumor2 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor2)
# Create histogram for tumor2
pl.tumor2 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor2))
pl.tumor2 <- pl.tumor2 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor2)
# Create histogram for tumor3
pl.tumor3 <- ggplot(data=re.skin.df, aes(x=re.skin.df$tumor3))
pl.tumor3 <- pl.tumor3 + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor1")
print(pl.tumor3)
# Create histogram for normall70
pl.normall70 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal70))
pl.normall70 <- pl.tumor1 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall70")
print(pl.normall70)
# Create histogram for normall70
pl.normall70 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal70))
pl.normall70 <- pl.normall70 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall70")
print(pl.normall70)
# Create histogram for normall71
pl.normall71 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal71))
pl.normall71 <- pl.normall71 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall71")
print(pl.normall71)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=re.skin.df[1:43]))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
tumor.samples <- unlist(re.skin.df[1:43])
print(tumor.samples)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=unlist(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=cloMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=colMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMean(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="red",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
pl <- pl.tumor + pl.normal
print(pl)
pl <- pl.tumor + pl.normal
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.7,size=3)
print(pl.scatter)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.7,size=3)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.5,size=4)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
tumor.avg <- rowMeans(re.skin.df[1:43])
normal.avg <- rowMeans(re.skin.df[44:72])
class(tumor.avg)
differ <- tumor.avg - normal.avg
print(differ)
pl.differ <- ggplot(data=differ,aes(x=differ))
print(pl.differ)
tumor.avg <- c(rowMeans(re.skin.df[1:43]))
normal.avg <- c(rowMeans(re.skin.df[44:72]))
differ <- tumor.avg - normal.avg
pl.differ <- ggplot(data=differ,aes(x=differ))
print(pl.differ)
differ <- tumor.avg - normal.avg
class(differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
pl.differ <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])))
pl.differ <- pl.differ + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8)
pl.differ <- pl.differ + xlab("difference in average expression")
print(pl.differ)
differ <- rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])
differ <- rowMeans(re.skin.df[1:43]) - rowMeans(re.skin.df[44:72])
overexpressed.gene <- 0
underexpressed.gene <- 0
for (dif in differ){
if (dif>0){overexpressed.gene <- overexpressed.gene+1}
if (dif<0){underexpressed.gene <- underexpressed.gene+1}
}
print(overexpressed.gene)
print(underexpressed.gene)
print("number of overexpressed.gene =" + overexpressed.gene)
print("number of overexpressed.gene =" + str(overexpressed.gene))
print("number of overexpressed.gene =", overexpressed.gene)
print("number of overexpressed.gene =", str(overexpressed.gene))
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot()
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression") + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
pl.box <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box <- pl.box + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box <- pl.box + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box)
# Creat a boxplot for gene AMY2B
pl.box1 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$AMY2B))
pl.box1 <- pl.box1 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box1 <- pl.box1 + ggtitle("Gene AMY2B expression in tumor and normal tissue")
print(pl.box1)
# Creat a boxplot for gene CLC
pl.box2 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$CLC))
pl.box2 <- pl.box2 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box2 <- pl.box2 + ggtitle("Gene CLC expression in tumor and normal tissue")
print(pl.box2)
# Creat a boxplot for gene NAT1
pl.box3 <- ggplot(data=skin.df, aes(x=factor(skin.df$tissue),y=skin.df$NAT1))
pl.box3 <- pl.box3 + geom_boxplot() + xlab("tissue sample types") + ylab("expression")
pl.box3 <- pl.box3 + ggtitle("Gene NAT1 expression in tumor and normal tissue")
print(pl.box3)
pl.scatter <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43]),y=rowMeans(re.skin.df[44:72])))
pl.scatter <- pl.scatter + geom_point(alpha=0.5,size=4)
pl.scatter <- pl.scatter + xlab("tumor samples") + ylab("nomal samples")
print(pl.scatter)
# Create histogram for tumor samples
pl.tumor <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[1:43])))
pl.tumor <- pl.tumor + geom_histogram(binwidth=5,color="red",fill="red", alpha=0.8) + xlab("tumor samples")
print(pl.tumor)
# Create histogram for normal samples
pl.normal <- ggplot(data=re.skin.df, aes(x=rowMeans(re.skin.df[44:72])))
pl.normal <- pl.normal + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normal samples")
print(pl.normal)
# Create histogram for normall72
pl.normall72 <- ggplot(data=re.skin.df, aes(x=re.skin.df$normal72))
pl.normall72 <- pl.normall72 + geom_histogram(binwidth=5,color="blue",fill="blue", alpha=0.8) + xlab("normall72")
print(pl.normall72)
getwd()
state.x77
USPersonalExpenditure
women
data()
library(ISLR)
# extract labels (cancer type)
nci.labs=NCI60$labs
# extract xperimental measurements (microarray data)
nci.data=NCI60$data
# number of rows and columns of nci.data
dim(nci.data)
# examine the cancer types for the cell lines
table(nci.labs)
nci.labs[which(table(nci.labs)==max(table(nci.labs)))]
# Exercise 1
precip
knitr::opts_chunk$set(echo = TRUE)
precip
t.test(precip, mu=38, alternative="less")
head(mtcars)
head(mtcars)
manual <- which(mtcars$am==0)
manual <- which(mtcars$am==0)
auto <- which(mtcars$am==1)
head(mtcars)
manual <- which(mtcars$am==0)
auto <- which(mtcars$am==1)
boxplot(mtcars$mpg[manual], mtcars$mpg[auto], ylab="mpg", names=c("manual", "auto"))
t.test(mtcars$mpg[manual], mtcars$mpg[auto], var.equal = TRUE, alternative="less")
distr <- sapply(1:10000, function(i) {
index <- sample(mtcars$am)
manual <- which(index==0)
auto <- which(index==1)
t.test(mtcars$mpg[manual], mtcars$mpg[auto], var.equal = TRUE, alternative="less")$statistic
})
hist(distr)
real_t_statistic <- t.test(mtcars$mpg[manual], mtcars$mpg[auto], var.equal = TRUE, alternative="less")$statistic
points(real_t_statistic,0, col="red", pch=16)
sprintf("%f", sum(distr<real_t_statistic)/length(distr))
setwd("~/projects/github/wur_bioinfomatics/Data_Analysis_Visualization/Block5/Lab_work")
load("Singh.rda")
names(Singh)
dim(Singh$X)
Singh$y
healthy <- Singh$X[Singh$y==1,]     # 1=healthy
diseased <- Singh$X[Singh$y==-1,]   #-1=diseased
t.test(healthy[,1], diseased[,1], "two.sided")
pvals <- sapply(1:ncol(healthy), function(i) {
t.test(healthy[,i], diseased[,i], "two.sided")$p.value
})
hist(pvals)
pvals <- sapply(1:ncol(healthy), function(i) {
t.test(healthy[,i], diseased[,i], "two.sided")$p.value
})
hist(pvals)
sum(pvals<0.05)
j=1:length(pvals)
m=length(pvals)
delta=0.05
bhfdr <- delta*(j/m)
plot(bhfdr, xlab='index', ylab='p-val')
points(sort(pvals), col='red')
max(which(sort(pvals)<=bhfdr))
install.packages("XLConnect")
theData <- read.csv("dietaryvariables.csv")
theData <- read.csv("dietaryvariables.csv")
head(theData)
?p.adjust
theData = theData[order(theData$Raw.p),]
theData
# bonferroni
theData$Bonferroni <- p.adjust(theData$Raw.p, method = "bonferroni")
# Benjamini Hochberg
theData$BH <- p.adjust(theData$Raw.p, method = "BH")
# holm
theData$Holm <- p.adjust(theData$Raw.p, method = "holm")
# hochberg
theData$Hochberg <- p.adjust(theData$Raw.p, method = "hochberg")
# hommel
theData$Hommel <- p.adjust(theData$Raw.p,method = "hommel")
# Benjamini & Yekutieli
theData$BY <- p.adjust(theData$Raw.p, method = "BY")
theData
theData
theData
X <- theData$Raw.p
Y <- cbind(theData$Bonferroni, theData$BH, theData$Holm, theData$Hochberg, theData$Hommel, theData$BY)
matplot(X, Y, xlab="Raw p-value", ylab="Adjusted p-value", type="l", asp=1, col=1:6, lty=1, lwd=2)
legend('bottomright',legend = c("Bonferroni", "BH", "Holm", "Hochberg", "Hommel", "BY"), col=1:6, cex=1, pch=16)
abline(0, 1, col=1, lty=2, lwd=1)
